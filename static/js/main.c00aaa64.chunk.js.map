{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["appear","keyframes","Img","styled","img","props","onClick","Button","button","H1","h1","TimerP","p","remainingRate","timer","PLAY_SECONDS","ResultDiv","div","PointP","Item","useState","clicked","setClicked","item","src","onExorcise","onMiss","App","emptyItems","Array","WIDTH","fill","items","setItems","isPlaying","setIsPlaying","exorciseCount","setExorciseCount","missCount","setMissCount","setTimer","useEffect","gameProgress","newItems","slice","i","random","interval","setInterval","c","Math","max","clearInterval","style","textAlign","display","gridTemplateColumns","gridAutoRows","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c00aaa64.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { random } from 'lodash';\nimport styled, { keyframes } from 'styled-components';\nimport './App.css';\n\ntype ItemName = 'aza-obake' | 'azaika';\n\nconst appear = keyframes`\n  0% {\n    opacity: 0%;\n  }\n  100% {\n    opacity: 100%;\n  }\n`;\n\nconst Img = styled.img`\n  max-width: 100%;\n  animation: 0.5s ${appear};\n  ${props => props.onClick && `\n    cursor: pointer;\n  `}\n`;\n\nconst Button = styled.button`\n  width: 200px;\n  height: 30px;\n  border-radius: 15px;\n  cursor: pointer;\n`;\n\nconst H1 = styled.h1`\n  text-align: center;\n`\n\nconst TimerP = styled.p<{ timer: number; }>`\n  font-size: 1.5em;\n  text-align: center;\n  ${props => {\n    const remainingRate = props.timer / PLAY_SECONDS;\n    if (remainingRate < 0.3) {\n      return 'color: red;';\n    } else if (remainingRate < 0.5) {\n      return 'color: orange;';\n    }\n    return 'color: green';\n  }}\n  font-weight: bold;\n`;\n\nconst ResultDiv = styled.div`\n  width: 300px;\n  border: 2px solid green;\n  margin: 0 auto;\n  padding: 1em;\n  text-align: center;\n`;\n\nconst PointP = styled.p`\n  margin-top: 0;\n  font-size: 2em;\n  font-weight: bold;\n`;\n\nconst Item: React.FC<{\n  item: ItemName | null;\n  onExorcise: () => void;\n  onMiss: () => void;\n}> = (props) => {\n  const [ clicked, setClicked ] = useState(false);\n  return (\n    props.item ? (\n      props.item === 'aza-obake' ? (\n        clicked ? (\n          <Img src='gaming-azaika.png' />\n        ) : (\n          <Img src='aza-obake.png' onClick={() => {\n            setClicked(true);\n            props.onExorcise();\n          }} />\n        )\n      ) : (\n        clicked ? (\n          <Img src='azaika-crying.png' />\n        ) : (\n          <Img src='azaika.png' onClick={() => {\n            setClicked(true);\n            props.onMiss();\n          }} />\n        )\n      )\n    ) : (\n      <Img src='/empty.png' />\n    )\n  );\n};\n\nconst WIDTH = 5;\nconst HEIGHT = 5;\nconst EACH_APPEAR_COUNT = 2;\nconst OBAKE_RATE = 0.8;\nconst PLAY_SECONDS = 20;\n\nconst App: React.FC = () => {\n  const emptyItems: (ItemName | null)[] = Array(WIDTH * HEIGHT).fill(null);\n  const [ items, setItems ] = useState(emptyItems);\n  const [ isPlaying, setIsPlaying ] = useState(false);\n  const [ exorciseCount, setExorciseCount ] = useState(0);\n  const [ missCount, setMissCount ] = useState(0);\n  const [ timer, setTimer ] = useState(PLAY_SECONDS);\n  useEffect(() => {\n    if (isPlaying && timer > 0) {\n      const gameProgress = 1 - (timer / PLAY_SECONDS);\n      const newItems = emptyItems.slice();\n      for (let i = 0; i < EACH_APPEAR_COUNT + gameProgress * 3; i++) {\n        const j = random(0, WIDTH * HEIGHT - 1);\n        newItems[j] = random() < OBAKE_RATE ? 'aza-obake' : 'azaika';\n      }\n      setItems(newItems);\n    }\n  }, [ isPlaying, timer ]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (isPlaying) {\n        if (timer > 0) {\n          setTimer(c => Math.max(c - 1, 0));\n        }\n      }\n    }, 1000);\n    return () => { clearInterval(interval); };\n  }, [ isPlaying ]);\n  return (\n    <div>\n      <H1>aza-obake 除霊ゲーム</H1>\n      <TimerP timer={timer}>残り時間: {timer}</TimerP>\n      {!isPlaying &&\n        <div style={{ textAlign: 'center' }}>\n          <Button onClick={() => {\n            setIsPlaying(true);\n          }}>\n            はじめる\n          </Button>\n        </div>\n      }\n      {timer > 0 ? (\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: `repeat(${WIDTH}, 1fr)`,\n          gridAutoRows: 'minmax(auto, 100%)',\n        }}>{\n          items.map((item, i) => (\n            <Item\n              key={`${timer}-${i}`}\n              item={item}\n              onExorcise={() => {\n                setExorciseCount(c => c + 1);\n              }}\n              onMiss={() => {\n                setMissCount(c => c + 1);\n              }}\n            />\n          ))\n        }</div>\n      ) : (\n        <ResultDiv>\n          <p>スコア</p>\n          <PointP>{exorciseCount - missCount * 2}</PointP>\n          <p>除霊成功: {exorciseCount}</p>\n          <p>失敗: {missCount}</p>\n          <Button onClick={() => {\n           setIsPlaying(true);\n           setTimer(PLAY_SECONDS);\n           setExorciseCount(0);\n           setMissCount(0);\n          }}>\n            もう一度プレイする\n          </Button>\n        </ResultDiv>\n      )}\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}